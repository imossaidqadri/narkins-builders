{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kabeer/software/narkins-builders/src/components/carousel-op/carousel-op.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport function Carousel({\n    dataSource = [],\n    swipe = true,\n    hideArrows = false,\n    autoPlay = true,\n    slideShow = true,\n    loop = true,\n    rightToLeft = false,\n    hideIndicators = false,\n    interval = 10000, isNotRounded = false, onChange = (newIndex: number) => { }\n}) {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [touchStart, setTouchStart] = useState(0);\n    const [touchEnd, setTouchEnd] = useState(0);\n    const timeoutRef = useRef(null);\n    useEffect(() => {\n        onChange(currentIndex);\n    }, [currentIndex])\n    useEffect(() => {\n        if (autoPlay) {\n            startSlideShow();\n        }\n        return () => {\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n            }\n        };\n    }, [currentIndex, autoPlay, slideShow, interval]);\n\n    const startSlideShow = () => {\n        stopSlideShow();\n        timeoutRef.current = setTimeout(() => {\n            updateIndex(currentIndex + (rightToLeft ? -1 : 1));\n        }, interval);\n    };\n\n    const stopSlideShow = () => {\n        if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n        }\n    };\n\n    const updateIndex = (newIndex) => {\n        if (newIndex < 0) {\n            newIndex = loop ? dataSource.length - 1 : 0;\n        } else if (newIndex >= dataSource.length) {\n            newIndex = loop ? 0 : dataSource.length - 1;\n        }\n        setCurrentIndex(newIndex);\n    };\n\n    const handleTouchStart = (e) => {\n        setTouchStart(e.targetTouches[0].clientX);\n    };\n\n    const handleTouchMove = (e) => {\n        setTouchEnd(e.targetTouches[0].clientX);\n    };\n\n    const handleTouchEnd = () => {\n        if (swipe) {\n            if (touchStart - touchEnd > 75) {\n                updateIndex(currentIndex + 1);\n            }\n            if (touchStart - touchEnd < -75) {\n                updateIndex(currentIndex - 1);\n            }\n        }\n    };\n\n    return (\n        <div className={`relative w-full overflow-hidden z-[0] h-full ${!isNotRounded ? \"rounded-xl\" : \"\"}`}>\n            <div\n                className=\"flex transition-transform duration-500 ease-in-out h-full\"\n                style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n                onTouchStart={handleTouchStart}\n                onTouchMove={handleTouchMove}\n                onTouchEnd={handleTouchEnd}\n            >\n                {dataSource.map((item, index) => (\n                    <div key={index} className=\"flex-none w-full h-full flex items-center justify-center\">\n                        <img src={item.image} loading={index === 0 ? \"eager\" : \"lazy\"} alt={`Slide ${index}`} style={{ objectFit: 'cover', flex: 1 }} className=\"w-full h-full\" />\n                    </div>\n                ))}\n            </div>\n            {!hideArrows && (\n                <React.Fragment>\n                    <button onClick={() => updateIndex(currentIndex - 1)}\n                        className=\"absolute px-4 left-0 top-1/2 transform -translate-y-1/2 group\"\n                        data-testid=\"carousel-left-control\"\n                        type=\"button\"\n                        aria-label=\"Previous slide\"\n                    >\n                        <span className=\"inline-flex h-8 w-8 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white sm:h-10 sm:w-10\">\n                            <svg\n                                stroke=\"currentColor\"\n                                fill=\"none\"\n                                strokeWidth={2}\n                                viewBox=\"0 0 24 24\"\n                                aria-hidden=\"true\"\n                                className=\"h-5 w-5 text-white sm:h-6 sm:w-6\"\n                                height=\"1em\"\n                                width=\"1em\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n                            </svg>\n                        </span>\n                    </button>\n                    <button onClick={() => updateIndex(currentIndex + 1)}\n                        className=\"group px-4 absolute right-0 top-1/2 transform -translate-y-1/2 \"\n                        data-testid=\"carousel-right-control\"\n                        type=\"button\"\n                        aria-label=\"Next slide\"\n                    >\n                        <span className=\"inline-flex h-8 w-8 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white sm:h-10 sm:w-10\">\n                            <svg\n                                stroke=\"currentColor\"\n                                fill=\"none\"\n                                strokeWidth={2}\n                                viewBox=\"0 0 24 24\"\n                                aria-hidden=\"true\"\n                                className=\"h-5 w-5 text-white sm:h-6 sm:w-6\"\n                                height=\"1em\"\n                                width=\"1em\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\n                            </svg>\n                        </span>\n                    </button>\n                </React.Fragment>\n            )}\n            {!hideIndicators && (\n                <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 py-4 flex\">\n                    {dataSource.map((_, idx) => (\n                        <button\n                            key={idx}\n                            onClick={() => updateIndex(idx)}\n                            className={`h-2 w-2 rounded-full mx-2 ${idx === currentIndex ? 'bg-yellow-700' : 'bg-white'}`}\n                        ></button>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Carousel;\n"],"names":[],"mappings":"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","debugId":null}}]
}